# =================================
# Digital NOC System - Backend Environment Configuration
# =================================

# Database Configuration
# Replace with your MongoDB Atlas connection string
# Format: mongodb+srv://<username>:<password>@<cluster>.mongodb.net/<database>
MONGODB_URI=mongodb+srv://your_username:your_password@cluster0.xxxxx.mongodb.net/digital-noc?retryWrites=true&w=majority

# JWT Configuration
# Generate a secure secret using: node -e "console.log(require('crypto').randomBytes(64).toString('hex'))"
# IMPORTANT: Use a different secret for production!
JWT_SECRET=your_super_secret_jwt_key_here_make_it_long_and_complex

# Server Configuration
PORT=5000
NODE_ENV=development

# Google OAuth Configuration
# Get this from Google Cloud Console > APIs & Services > Credentials
# Add your production domain to authorized origins
GOOGLE_CLIENT_ID=your_google_client_id_here.apps.googleusercontent.com

# Production Notes:
# 1. For Render deployment, set NODE_ENV=production
# 2. PORT will be automatically set by Render (usually 10000)
# 3. Ensure MongoDB Atlas allows connections from 0.0.0.0/0
# 4. Update Google OAuth with your Render domain

# File Upload Configuration
UPLOAD_PATH=./uploads
MAX_FILE_SIZE=10485760

# CORS Configuration
# Frontend URL for CORS (development)
FRONTEND_URL=http://localhost:3000

# Optional: Email Configuration (for notifications)
# EMAIL_SERVICE=gmail
# EMAIL_USER=your-email@gmail.com
# EMAIL_PASS=your-app-password

# Optional: Rate Limiting
# RATE_LIMIT_WINDOW_MS=900000
# RATE_LIMIT_MAX_REQUESTS=100

# Security Configuration
# SESSION_SECRET=another_secure_secret_for_sessions
# BCRYPT_ROUNDS=12